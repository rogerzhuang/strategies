services:
  nginx:
    image: nginx:alpine
    pull_policy: always
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - pairs-trading
      - option-write
      - universe
      - zacks
    restart: unless-stopped

  pairs-trading:
    image: rogerzhuang/pairs
    pull_policy: always
    container_name: pairs-trading
    expose:
      - "5002"
    volumes:
      - ./volumes/pairs_signals:/app/dashboard/signals
      - ./volumes/pairs_results:/app/dashboard/results
    environment:
      - PYTHONPATH=/app
      - FLASK_APP=dashboard/app.py
      - FLASK_ENV=production
    restart: unless-stopped

  option-write:
    image: rogerzhuang/option_write
    pull_policy: always
    container_name: option-write
    expose:
      - "5001"
    volumes:
      - ./volumes/option_signals:/app/signals
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
    restart: unless-stopped

  universe:
    image: rogerzhuang/universe
    pull_policy: always
    container_name: universe
    expose:
      - "5050"
    volumes:
      - ./volumes/universe_data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_APP=app.py
      - FLASK_ENV=production
    restart: unless-stopped

  zacks_data:
    image: rogerzhuang/zacks_data
    pull_policy: always
    container_name: zacks_data
    expose:
      - "5051"
    depends_on:
      - universe
    environment:
      - PYTHONUNBUFFERED=1
      - PGHOST=10.112.1.21
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=${POSTGRES_PORT}
      - PGDATABASE=${ZACKS_DB}
    volumes:
      - ./volumes/zacks_data:/app/data
    restart: unless-stopped

  zacks:
    image: rogerzhuang/zacks
    pull_policy: always
    container_name: zacks
    expose:
      - "5003"
    depends_on:
      - zacks_data
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_APP=app.py
      - FLASK_ENV=production
    volumes:
      - ./volumes/zacks_signals:/app/signals
    restart: unless-stopped
